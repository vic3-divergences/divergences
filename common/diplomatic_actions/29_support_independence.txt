support_independence = {
	groups = {
		general
	}
	requires_approval = yes
	show_effect_in_tooltip = yes
	
	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}

	possible = {
		scope:target_country.overlord = {
			NOT = {
				has_diplomatic_pact = {
					type = alliance
					who = root
				}
			}
		}
		scope:target_country = {
			NOT = {
				play_participant_has_war_goal_of_type_against = {
					type = independence
					target = overlord
				}
				war_participant_has_war_goal_of_type_against = {
					type = independence
					target = overlord
				}
			}
		}
	}

	pact = {
		cost = 50
		is_two_sided_pact = yes
		has_junior_participant = yes
		junior_support_only_against_overlord = yes
        auto_support_type = dp_independence
		auto_support_type = dp_increase_autonomy
		auto_support_type = dp_annex_subject
		
		relations_progress_per_day = 1.0  # At 100, +1 relations
		relations_improvement_max = 80
		
		second_modifier = {
			country_pact_leverage_generation_add = 200
			country_liberty_desire_add = 0.05
		}

		requirement_to_maintain = {
			trigger = {
				has_diplomatic_relevance = scope:target_country
			}
		}
		
		requirement_to_maintain = {
			trigger = {
				scope:target_country = { is_subject = yes }
			}
		}		
		
		requirement_to_maintain = {
			trigger = {
				OR = {
					is_subject = no
					overlord = scope:target_country.overlord
					aggressive_diplomatic_plays_permitted = yes
				}					
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_HIGH_LIBERTY_DESIRE"
					OR = {
						is_subject = no
						NOT = { overlord = scope:target_country.overlord }
						liberty_desire >= define:NDiplomacy|WAR_GOAL_INCREASE_AUTONOMY_MIN_LIBERTY_DESIRE
					}					
				}
			}
		}			
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NO_SUBJECT_RELATION"
					NOT = {
						is_subject_of = scope:target_country
						scope:target_country = { is_subject_of = root }
					}				
				}
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT
					scope:target_country.relations:root > relations_threshold:poor
				}
			}

			show_about_to_break_warning = {
				scope:target_country.relations:root <= -17 # this is: poor + 3
				scope:target_country.relations_change_rate:root < 0
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_AT_PEACE"
					NOT = { has_war_with = scope:target_country }
				}
			}
		}
		
		requirement_to_maintain = {
			trigger = {
				country_rank >= scope:target_country.country_rank
			}
		}		

		manual_break_effect = {
			change_relations = { country = scope:target_country value = -30 }
			create_bidirectional_truce = { country = scope:target_country months = 12 }	
		}			
	}

	accept_effect = {
		add_overlord_lobby_appeasement_from_diplomacy = { 
			FIRST = scope:target_country
			SECOND = root
			PRO_AMOUNT = -2
			ANTI_AMOUNT = 2
			FACTOR = appeasement_independence_supported
		}			
	}
	
	ai = {
		check_acceptance_for_will_break = yes
		check_acceptance_for_will_propose = yes	
	
		evaluation_chance = {
			value = 0.1
			
			add = {
				value = country_rank
				multiply = 0.05
			}	
	
			# Rebellious subjects should very actively seek fellow subjects to rebel together with
			if = {
				limit = {	
					is_subject = yes
					has_attitude = {
						who = overlord
						attitude = rebellious
					}
				}
				add = 1.0
			}	
		}			

		# This is the acceptance score for the senior part of the support_independence (used for 'request_support_independence' action and checking AI in both directions)
		accept_score = {
			value = 0

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}		
			
			if = {
				limit = {
					scope:actor = { 
						is_subject = yes 
						overlord = root.overlord
					}
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_FELLOW_SUBJECT"
					value = 100
				}
			}				

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.75
					max = 30
				}
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.75
					min = -30
				}
			}
			
			if = {
				limit = {
					NOT = { is_country_type = unrecognized }
					scope:actor = { is_country_type = unrecognized }
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_UNRECOGNIZED"
					value = -25
				}
			}				

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = protective
						}
					}
					value = 40
				}
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = genial
						}
					}
					value = 30
				}
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}	
							has_attitude = {
								who = scope:actor
								attitude = cooperative
							}
							has_attitude = {
								who = scope:actor
								attitude = domineering
							}							
						}
					}
					value = 20
				}
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = cautious
						}
					}
					value = -50
				}
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}
							has_attitude = {
								who = scope:actor
								attitude = rebellious
							}
						}
					}
					value = -1000
				}
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE_TOWARDS_ACTOR_OVERLORD"
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor.overlord
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor.overlord
								attitude = rebellious
							}	
						}
					}
					value = 50
				}
				else_if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor.overlord
								attitude = belligerent
							}
							has_attitude = {
								who = scope:actor.overlord
								attitude = domineering
							}
							has_attitude = {
								who = scope:actor.overlord
								attitude = defiant
							}								
						}
					}
					value = 30
				}
				else = {
					value = -1000
				}				
			}				

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:cordial
						"relations(scope:actor)" < relations_threshold:amicable
					}
					value = 10
				}				
				else_if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 25
				}
				else_if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_PRINCIPLE_SACRED_CIVICS"

				if = {
					limit = {
						AND = {
							scope:actor.power_bloc ?= {
								OR = {
									has_principle = principle:principle_sacred_civics_1
									has_principle = principle:principle_sacred_civics_2
									has_principle = principle:principle_sacred_civics_3
								}
							}
							scope:actor.religion = root.religion
						}
					}
					add = 20
				}
			}			
		}

		# This is the acceptance score for the junior part of the support_independence (used for 'support_independence' action and checking AI in both directions)
		junior_accept_score = {
			value = 0

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}
			
			if = {
				limit = {
					scope:actor = { 
						is_subject = yes 
						overlord = root.overlord
					}
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_FELLOW_SUBJECT"
					value = 100
				}
			}			
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ARMY_STRENGTH"
				value = "scope:actor.ai_army_comparison(root)"
				min = -50
				max = 50
			}				

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					max = 20
				}
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					min = -20
				}
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE_TOWARDS_OWN_OVERLORD"
				if = {
					limit = {
						has_attitude = {
							who = overlord
							attitude = rebellious
						}
					}
					value = 50
				}
				else_if = {
					limit = {
						has_attitude = {
							who = overlord
							attitude = defiant
						}
					}
					value = 25
				}
				else_if = {
					limit = {
						has_attitude = {
							who = overlord
							attitude = loyal
						}
					}
					value = -1000
				}				
			}			

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = genial
						}
					}
					value = 30
				}
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}	
							has_attitude = {
								who = scope:actor
								attitude = cooperative
							}
							has_attitude = {
								who = scope:actor
								attitude = loyal
							}							
						}
					}
					value = 20
				}
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = cautious
						}
					}
					value = -50
				}
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = protective
							}
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = domineering
							}
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}
						}
					}
					value = -1000
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 20
				}
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_PRINCIPLE_SACRED_CIVICS"

				if = {
					limit = {
						AND = {
							scope:actor.power_bloc ?= {
								OR = {
									has_principle = principle:principle_sacred_civics_1
									has_principle = principle:principle_sacred_civics_2
									has_principle = principle:principle_sacred_civics_3
								}
							}
							scope:actor.religion = root.religion
						}
					}
					add = 20
				}
			}			
		}
	
		propose_score = {
			value = 10
			
			# Rebellious subjects should very actively seek fellow subjects to rebel together with
			if = {
				limit = {
					is_subject = yes
					scope:target_country = { 
						is_subject = yes 
						overlord = root.overlord
					}				
				}
				add = 100
			}		
		}

		propose_break_score = {
			value = 10
		}
		
		will_propose_even_if_not_accepted = {	
			is_subject = yes
			scope:target_country = { # Ask high LD players if they want to rebel together
				is_ai = no
				is_subject = yes 
				overlord = root.overlord
			}
		}		
	}
}

request_support_independence = {
	groups = {
		general
	}
	requires_approval = yes
	show_effect_in_tooltip = yes
	
	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
		is_subject = yes
	}

	accept_effect = {}
	
	reverse_pact = support_independence

	ai = {
		check_acceptance_for_will_propose = yes
		
		evaluation_chance = {
			value = 0.0
			
			if = {
				limit = {
					has_attitude = {
						who = overlord
						attitude = defiant
					}	
				}
				add = 0.25
			}

			# Rebellious subjects should very actively seek fellow subjects to rebel together with
			if = {
				limit = {
					has_attitude = {
						who = overlord
						attitude = rebellious
					}
				}
				add = 1.0
			}		
		}		

		propose_score = {
			value = 10
			
			# Rebellious subjects should very actively seek fellow subjects to rebel together with
			if = {
				limit = {
					scope:target_country = { 
						is_subject = yes 
						overlord = root.overlord
					}				
				}
				add = 100
			}
		}

		propose_break_score = {
			value = 10
		}

		use_obligation_chance = {
			value = 25
		}

		owe_obligation_chance = {
			value = 25
		}
		
		will_propose_even_if_not_accepted = {
			scope:target_country = { # Ask high LD players if they want to rebel together
				is_ai = no
				is_subject = yes 
				overlord = root.overlord
			}
		}			
	}
}
