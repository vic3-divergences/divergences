# group = this is the law_group a law belongs to
# icon = graphical icon shown in-game
# modifier = {} modifier on country for having adopted this law

law_autocracy = {	
	group = lawgroup_distribution_of_power
	
	icon = "gfx/interface/icons/law_icons/autocracy.dds"
	
	progressiveness = -100
	
	# Has major legitimacy issues with parliamentary republic, they should be oligarchy instead
	disallowing_laws = {
		law_parliamentary_republic
	}

	on_activate = {
		if = {
			limit = {
				has_law = law_type:law_elected_bureaucrats
				has_law = law_type:law_monarchy
			}
			deactivate_law = law_type:law_elected_bureaucrats
			activate_law = law_type:law_appointed_bureaucrats
		}
		else_if = {
			limit = {
				has_law = law_type:law_elected_bureaucrats
				NOT = {
					has_law = law_type:law_monarchy
				}
			}
			deactivate_law = law_type:law_elected_bureaucrats
			activate_law = law_type:law_hereditary_bureaucrats
		}
		scripted_effect_parties_disappearence = yes
		if = {
			limit = {
				has_modifier = missouri_compromise
			}
			remove_modifier = missouri_compromise
		}
	}

	modifier = {
		country_legitimacy_headofstate_add = 30
		country_legitimacy_govt_total_clout_add = 120
		country_legitimacy_ideological_incoherence_mult = 0.5
		country_aristocrats_pol_str_mult = 0.5
		country_officers_pol_str_mult = 0.5
		country_authority_add = 200
	}

	can_enact = {}

	can_impose = {
		OR = {
			AND = {
				is_in_same_power_bloc = scope:target_country
				AND = {
					modifier:country_can_impose_same_lawgroup_distribution_of_power_in_power_bloc_bool = yes
					has_law = scope:law
				}
			}
			can_impose_law_default = yes
		}
	}

	ai_enact_weight_modifier = { #Petitions
		value = 0
		
		if = {
			limit = { ai_has_enact_weight_modifier_journal_entries = yes }
			add = 750
		}
	}
	
	ai_impose_chance = {
		value = 0
		
		if = {
			limit = {
				has_law = law_type:law_autocracy
				OR = {
					AND = {
						power_bloc ?= { has_identity = identity:identity_ideological_union }
						has_strategy = ai_strategy_conservative_agenda					
					}
					has_strategy = ai_strategy_reactionary_agenda
				}
				scope:target_country = { 
					NOR = { # Is their law different enough from what we want to impose?
						has_law = law_type:law_oligarchy
						has_law = law_type:law_landed_voting
					}
				}
			}
			
			add = base_impose_law_weight
		}
			
	}
}

law_technocracy = {
	group = lawgroup_distribution_of_power
	
	icon = "gfx/interface/icons/law_icons/technocracy.dds"
	
	progressiveness = -50

	on_activate = {
		if = {
			limit = {
				has_law = law_type:law_elected_bureaucrats
			}
			deactivate_law = law_type:law_elected_bureaucrats
			activate_law = law_type:law_appointed_bureaucrats
		}
		scripted_effect_parties_disappearence = yes
		if = {
			limit = {
				has_modifier = missouri_compromise
			}
			remove_modifier = missouri_compromise
		}
	}
	
	modifier = {
		country_legitimacy_headofstate_add = 10
		country_legitimacy_govt_total_clout_add = 120
		country_legitimacy_govt_size_add = 2
		country_legitimacy_ideological_incoherence_mult = -0.1
		country_academics_pol_str_mult = 0.33
		country_engineers_pol_str_mult = 0.33
		country_officers_pol_str_mult = 0.33
		country_authority_add = 100
	}

	unlocking_technologies = {
		central_archives 
	}

	can_enact = {}

	can_impose = {
		OR = {
			AND = {
				is_in_same_power_bloc = scope:target_country
				AND = {
					modifier:country_can_impose_same_lawgroup_distribution_of_power_in_power_bloc_bool = yes
					has_law = scope:law
				}
			}
			can_impose_law_default = yes
		}
	}
	
	ai_enact_weight_modifier = { #Petitions
		value = 0
		
		if = {
			limit = { ai_has_enact_weight_modifier_journal_entries = yes }
			add = 750
		}
	}
	
	ai_impose_chance = {
		value = 0
		
		if = {
			limit = {
				has_law = law_type:law_technocracy
				"ai_ideological_opinion(scope:target_country)" >= 25 # Only want to do this on ideologically similar countries
				scope:target_country = { # Is their law different enough from what we want to impose?
					NOT = { has_law = law_type:law_single_party_state }
				}
			}
			
			add = base_impose_law_weight
		}

	}	
}

law_oligarchy = {
	group = lawgroup_distribution_of_power
	
	icon = "gfx/interface/icons/law_icons/oligarchy.dds"
	
	progressiveness = -50

	on_activate = {
		if = {
			limit = {
				has_law = law_type:law_elected_bureaucrats
				has_law = law_type:law_monarchy
			}
			deactivate_law = law_type:law_elected_bureaucrats
			activate_law = law_type:law_appointed_bureaucrats
		}
		else_if = {
			limit = {
				has_law = law_type:law_elected_bureaucrats
				NOT = {
					has_law = law_type:law_monarchy
				}
			}
			deactivate_law = law_type:law_elected_bureaucrats
			activate_law = law_type:law_hereditary_bureaucrats
		}
		scripted_effect_parties_disappearence = yes
		if = {
			limit = {
				has_modifier = missouri_compromise
			}
			remove_modifier = missouri_compromise
		}
	}
	
	modifier = {
		country_legitimacy_headofstate_add = 10
		country_legitimacy_govt_total_clout_add = 120
		country_legitimacy_govt_size_add = 2
		country_legitimacy_ideological_incoherence_mult = -0.1
		country_officers_pol_str_mult = 0.5
		country_aristocrats_pol_str_mult = 0.5
		country_capitalists_pol_str_mult = 0.25
		country_authority_add = 100
	}

	can_enact = {}

	can_impose = {
		OR = {
			AND = {
				is_in_same_power_bloc = scope:target_country
				AND = {
					modifier:country_can_impose_same_lawgroup_distribution_of_power_in_power_bloc_bool = yes
					has_law = scope:law
				}
			}
			can_impose_law_default = yes
		}
	}
	
	ai_enact_weight_modifier = { #Petitions
		value = 0
		
		if = {
			limit = { ai_has_enact_weight_modifier_journal_entries = yes }
			add = 750
		}
	}
	
	ai_impose_chance = {
		value = 0
		
		if = {
			limit = {
				has_law = law_type:law_oligarchy
				OR = {
					AND = {
						power_bloc ?= { has_identity = identity:identity_ideological_union }
						has_strategy = ai_strategy_conservative_agenda					
					}
					has_strategy = ai_strategy_reactionary_agenda
				}
				scope:target_country = { 
					NOR = { # Is their law different enough from what we want to impose?
						has_law = law_type:law_autocracy
						has_law = law_type:law_landed_voting
					}
				}
			}
			
			add = base_impose_law_weight
		}
			
	}		
}

law_elder_council = {
	group = lawgroup_distribution_of_power
	
	icon = "gfx/interface/icons/law_icons/elder_council.dds"
	
	progressiveness = -25

	unlocking_laws = {
		law_chiefdom
	}

	is_visible = {
		is_country_type = decentralized
	}
	
	on_activate = {
		if = {
			limit = {
				has_law = law_type:law_elected_bureaucrats
				has_law = law_type:law_monarchy
			}
			deactivate_law = law_type:law_elected_bureaucrats
			activate_law = law_type:law_appointed_bureaucrats
		}
		else_if = {
			limit = {
				has_law = law_type:law_elected_bureaucrats
				NOT = {
					has_law = law_type:law_monarchy
				}
			}
			deactivate_law = law_type:law_elected_bureaucrats
			activate_law = law_type:law_hereditary_bureaucrats
		}
		scripted_effect_parties_disappearence = yes
		if = {
			limit = {
				has_modifier = missouri_compromise
			}
			remove_modifier = missouri_compromise
		}
	}

	modifier = {
		country_legitimacy_base_add = 20
		country_legitimacy_govt_total_clout_add = 100
		country_legitimacy_govt_size_add = 2
		country_legitimacy_ideological_incoherence_mult = -0.1
		country_aristocrats_pol_str_mult = 0.5
		country_officers_pol_str_mult = 0.5
		country_clergymen_pol_str_mult = 0.5
		country_authority_add = 200
	}

	ai_enact_weight_modifier = { #Petitions
		value = 0
		
		if = {
			limit = { ai_has_enact_weight_modifier_journal_entries = yes }
			add = 750
		}
	}
}

law_landed_voting = {
	group = lawgroup_distribution_of_power
	
	icon = "gfx/interface/icons/law_icons/landed_voting.dds"
	
	progressiveness = -25

	unlocking_technologies = {
		democracy
	}

	disallowing_laws = {
		law_chiefdom
		law_command_economy
	}

	modifier = {
		country_legitimacy_govt_total_votes_add = 40
		country_legitimacy_govt_total_clout_add = 100
		country_legitimacy_govt_size_add = 1
		country_legitimacy_ideological_incoherence_mult = 0.2
		country_aristocrats_voting_power_add = 50
		country_officers_voting_power_add = 25
		country_clergymen_voting_power_add = 25
		country_capitalists_voting_power_add = 25
		country_authority_add = 100
	}
	
	can_enact = {}

	on_activate = {
		scripted_effect_parties_emergence = yes
	}
	
	can_impose = {
		country_has_voting_franchise = yes # modification of the standard trigger, only countries with a voting franchise can impose democracy on others
		OR = {
			AND = {
				is_in_same_power_bloc = scope:target_country
				AND = {
					modifier:country_can_impose_same_lawgroup_distribution_of_power_in_power_bloc_bool = yes
					has_law = scope:law
				}
			}
			can_impose_law_default = yes
		}
	}

	ai_enact_weight_modifier = { #Petitions
		value = 0
		
		if = {
			limit = { ai_has_enact_weight_modifier_journal_entries = yes }
			add = 750
		}
	}
	
	ai_impose_chance = {
		value = 0
		
		if = {
			limit = {
				has_law = law_type:law_landed_voting
				OR = {
					AND = {
						power_bloc ?= { has_identity = identity:identity_ideological_union }
						has_strategy = ai_strategy_conservative_agenda					
					}
					has_strategy = ai_strategy_reactionary_agenda
				}
				scope:target_country = { 
					NOR = { # Is their law different enough from what we want to impose?
						has_law = law_type:law_oligarchy
						has_law = law_type:law_autocracy
					}
				}
			}
			
			add = base_impose_law_weight
		}
			
	}		
}

law_wealth_voting = {
	group = lawgroup_distribution_of_power
	
	icon = "gfx/interface/icons/law_icons/wealth_voting.dds"
	
	progressiveness = 0

	unlocking_technologies = {
		democracy
	}

	disallowing_laws = {
		law_chiefdom
		law_command_economy
	}
	
	modifier = {
		country_legitimacy_govt_total_votes_add = 65
		country_legitimacy_govt_total_clout_add = 75
		country_legitimacy_govt_size_add = 1
		country_legitimacy_ideological_incoherence_mult = 0.2
		country_voting_power_base_add = 40
		country_voting_power_wealth_threshold_add = 25
		country_authority_add = 100
	}
	
	can_enact = {}

	on_activate = {
		scripted_effect_parties_emergence = yes
	}
	
	can_impose = {
		country_has_voting_franchise = yes # modification of the standard trigger, only countries with a voting franchise can impose democracy on others
		OR = {
			AND = {
				is_in_same_power_bloc = scope:target_country
				AND = {
					modifier:country_can_impose_same_lawgroup_distribution_of_power_in_power_bloc_bool = yes
					has_law = scope:law
				}
			}
			can_impose_law_default = yes
		}
	}

	ai_enact_weight_modifier = { #Petitions
		value = 0
		
		if = {
			limit = { ai_has_enact_weight_modifier_journal_entries = yes }
			add = 750
		}
	}
	
	ai_impose_chance = {
		value = 0
		
		if = {
			limit = {
				has_law = law_type:law_wealth_voting
				has_strategy = ai_strategy_progressive_agenda	
				scope:target_country = { # Is their law different enough from what we want to impose?
					NOR = { 
						has_law = law_type:law_census_voting 
						has_law = law_type:law_landed_voting 
					}
				}
			}
			
			add = base_impose_law_weight
		}
			
	}	
}

law_census_voting = {
	group = lawgroup_distribution_of_power
	
	icon = "gfx/interface/icons/law_icons/census_voting.dds"
	
	progressiveness = 50

	unlocking_technologies = {
		democracy
	}

	disallowing_laws = {
		law_chiefdom
		law_command_economy
	}

	modifier = {
		country_legitimacy_govt_total_votes_add = 85
		country_legitimacy_govt_total_clout_add = 55
		country_legitimacy_govt_size_add = 1
		country_legitimacy_ideological_incoherence_mult = 0.1
		country_voting_power_wealth_threshold_add = 15
		country_voting_power_from_literacy_add = 30
		country_authority_add = 50
	}

	can_enact = {}

	on_activate = {
		scripted_effect_parties_emergence = yes
	}
	
	can_impose = {
		country_has_voting_franchise = yes # modification of the standard trigger, only countries with a voting franchise can impose democracy on others
		OR = {
			AND = {
				is_in_same_power_bloc = scope:target_country
				AND = {
					modifier:country_can_impose_same_lawgroup_distribution_of_power_in_power_bloc_bool = yes
					has_law = scope:law
				}
			}
			can_impose_law_default = yes
		}
	}
	
	ai_enact_weight_modifier = { #Petitions
		value = 0
		
		if = {
			limit = { ai_has_enact_weight_modifier_journal_entries = yes }
			add = 750
		}
	}
	
	ai_impose_chance = {
		value = 0
		
		if = {
			limit = {
				has_law = law_type:law_census_voting
				has_strategy = ai_strategy_progressive_agenda			
				scope:target_country = { # Is their law different enough from what we want to impose?
					NOR = { 
						has_law = law_type:law_wealth_voting 
						has_law = law_type:law_universal_suffrage 
					}
				}
			}
			
			add = base_impose_law_weight
		}
			
	}
}

law_universal_suffrage = {
	group = lawgroup_distribution_of_power
	
	icon = "gfx/interface/icons/law_icons/universal_suffrage.dds"
	
	progressiveness = 100

	unlocking_technologies = {
		egalitarianism
	}

	disallowing_laws = {
		law_chiefdom
		law_command_economy
	}
	
	modifier = {
		country_legitimacy_govt_total_votes_add = 110
		country_legitimacy_govt_total_clout_add = 25
		country_voting_power_base_add = 20
		country_legitimacy_govt_size_add = 1
	}
	
	can_enact = {}

	on_activate = {
		scripted_effect_parties_emergence = yes
	}
	
	can_impose = {
		country_has_voting_franchise = yes # modification of the standard trigger, only countries with a voting franchise can impose democracy on others
		OR = {
			AND = {
				is_in_same_power_bloc = scope:target_country
				AND = {
					modifier:country_can_impose_same_lawgroup_distribution_of_power_in_power_bloc_bool = yes
					has_law = scope:law
				}
			}
			can_impose_law_default = yes
		}
	}
	
	ai_enact_weight_modifier = { #Petitions
		value = 0
		
		if = {
			limit = { ai_has_enact_weight_modifier_journal_entries = yes }
			add = 750
		}
	}
	
	ai_impose_chance = {
		value = 0
		
		if = {
			limit = {
				has_law = law_type:law_universal_suffrage
				has_strategy = ai_strategy_egalitarian_agenda	
				scope:target_country = { # Is their law different enough from what we want to impose?
					NOR = { 
						has_law = law_type:law_census_voting				 
						has_law = law_type:law_anarchy
					}
				}
			}
			
			add = base_impose_law_weight
		}

	}
}

law_anarchy = {
	group = lawgroup_distribution_of_power
	
	icon = "gfx/interface/icons/law_icons/anarchy.dds"
	
	progressiveness = 200

	unlocking_technologies = {
		anarchism 
	}
	
	unlocking_laws = {
		law_cooperative_ownership
	}
	
	modifier = {
		state_pop_pol_str_add = 1
		country_legitimacy_govt_total_clout_add = 100
		state_political_strength_from_wealth_mult = -0.75
		country_authority_mult = -0.5
		country_legitimacy_govt_size_add = 2
	}

	can_enact = {}

	on_activate = {
		scripted_effect_parties_disappearence = yes
		if = {
			limit = {
				has_modifier = missouri_compromise
			}
			remove_modifier = missouri_compromise
		}
	}
	
	ai_will_do = {
		exists = ruler
		ruler = {
			has_ideology = ideology:ideology_anarchist
		}
	}
	
	can_impose = {
		OR = {
			AND = {
				is_in_same_power_bloc = scope:target_country
				AND = {
					modifier:country_can_impose_same_lawgroup_distribution_of_power_in_power_bloc_bool = yes
					has_law = scope:law
				}
			}
			AND = { # modification of the standard trigger, only other anarchic countries can impose anarchy on their subjects
				has_law = scope:law
				can_impose_law_default = yes
			}
		}
	}
	
	ai_enact_weight_modifier = { #Petitions
		value = 0
		
		if = {
			limit = { ai_has_enact_weight_modifier_journal_entries = yes }
			add = 750
		}
	}
	
	ai_impose_chance = {
		value = 0
		
		if = {
			limit = {
				has_law = law_type:law_anarchy
				has_strategy = ai_strategy_egalitarian_agenda	
				scope:target_country = { # Is their law different enough from what we want to impose?
					NOT = { has_law = law_type:law_universal_suffrage }
				}
			}
			
			add = base_impose_law_weight
		}
			
	}
}

law_single_party_state = {
	group = lawgroup_distribution_of_power
	
	icon = "gfx/interface/icons/law_icons/single_party_state.dds"
	
	progressiveness = 0

	can_enact = {
		OR = {
			custom_tooltip = {
				text = ruler_in_party_tt
				exists = ruler
				OR = {
					ruler = {
						this.interest_group = {
							has_party = yes
						}
					}
				}
			}
			custom_tooltip = {
				text = sps_no_party_tt
				country_has_voting_franchise = no
			}
		}
	}

	unlocking_technologies = {
		political_agitation 
	}
	
	modifier = {
		country_legitimacy_govt_total_votes_add = 100
		country_legitimacy_ideological_incoherence_mult = -0.25
		country_authority_add = 250
		country_voting_power_base_add = 20
		interest_group_in_government_attraction_mult = 0.20
	}

	on_activate = {
		set_only_legal_party_from_ig = ruler.interest_group
		
		custom_tooltip = {
			text = sps_government_reshuffle_tt
			every_interest_group = {
				limit = {
					is_in_government = yes
					NOT = { #Removes all IGs from government that aren't in your party
						has_party = yes
					}
				}
				remove_ruling_interest_group = yes
			}
			every_interest_group = {
				limit = { #Adds all IGs that are in your party to the government
					is_in_government = no
					has_party = yes
				}
				add_ruling_interest_group = yes
			}
		}
	}
	
	on_deactivate = {
		unset_only_legal_party = yes
		update_party_support = yes
	}
	
	ai_will_do = {
		exists = ruler
		ruler = {
			interest_group = {
				has_party = yes
			}
			law_stance = {
				law = law_type:law_single_party_state
				value > neutral
			}
		}
	}
	can_impose = {
		OR = {
			AND = {
				is_in_same_power_bloc = scope:target_country
				AND = {
					modifier:country_can_impose_same_lawgroup_distribution_of_power_in_power_bloc_bool = yes
					has_law = scope:law
				}
			}
			AND = { # modification of the standard trigger, only other single-party states countries can impose single-party states on their subjects
				has_law = scope:law
				can_impose_law_default = yes
			}
		}
	}

	ai_enact_weight_modifier = { #Petitions
		value = 0
		
		if = {
			limit = { ai_has_enact_weight_modifier_journal_entries = yes }
			add = 750
		}
	}
	
	ai_impose_chance = {
		value = 0
		
		if = {
			limit = {
				has_law = law_type:law_single_party_state
				"ai_ideological_opinion(scope:target_country)" >= 25 # Only want to do this on ideologically similar countries
				scope:target_country = { # Is their law different enough from what we want to impose?
					NOT = { has_law = law_type:law_technocracy }
				}				
			}
			
			add = base_impose_law_weight
		}

	}
}

